// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  Booking   Booking[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Company {
  id           String         @id @default(uuid())
  name         String
  address      String
  imageUrl     String
  category     String
  services     Service[]
  booking      Booking[]
  Professional Professional[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model Professional {
  id        String    @id @default(uuid())
  name      String
  company   Company   @relation(fields: [companyId], references: [id])
  role      String
  companyId String
  services  Service[]
  bookings  Booking[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Service {
  id             String       @id @default(uuid())
  name           String
  price          Decimal      @db.Decimal(10, 2)
  company        Company      @relation(fields: [companyId], references: [id])
  companyId      String
  description    String
  booking        Booking[]
  professionalId String
  imageUrl       String?
  professional   Professional @relation(fields: [professionalId], references: [id])
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model Booking {
  id             String        @id @default(uuid())
  user           User          @relation(fields: [userId], references: [id])
  userId         String
  service        Service       @relation(fields: [serviceId], references: [id])
  serviceId      String
  date           DateTime
  company        Company       @relation(fields: [companyId], references: [id])
  companyId      String
  Professional   Professional? @relation(fields: [professionalId], references: [id])
  professionalId String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}
